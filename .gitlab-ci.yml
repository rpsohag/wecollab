#job:
#  tags:
#    - docker
#    - centos

image: edbizarro/gitlab-ci-pipeline-php:7.4
#image: php:7.4

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

stages:
  - preparation
  - building
  - syntax
  - testing
  - security
  - deploy

variables:
  MYSQL_ROOT_PASSWORD: secret
  MYSQL_USER: mysql_user
  MYSQL_PASSWORD: secret
  MYSQL_DATABASE: wecollab
  DB_HOST: mysql


#
# Stage: Preparation
#

composer:
  stage: preparation
  script:
    - php -v
    - composer --version
    - php -d memory_limit=-1 composer.phar install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --no-suggest
    - cp .env.example .env
    - mkdir -p storage/framework/{sessions,views,cache}
    - mkdir -p storage/logs
    - php artisan key:generate
  artifacts:
    paths:
      - storage/
      - vendor/
      - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/
      - storage/
      - .env

#yarn:
#  stage: preparation
#  script:
#    - yarn --version
#    - yarn install --pure-lockfile
#  artifacts:
#    paths:
#      - node_modules/
#    expire_in: 1 days
#    when: always
#  cache:
#    paths:
#      - node_modules/


#
# Stage: Building
#

#build-assets:
#  stage: building
#  # Download the artifacts for these jobs
#  dependencies:
#    - composer
#    - yarn
#  script:
#    - yarn --version
#    - yarn run production --progress false
#  artifacts:
#    paths:
#      - public/css/
#      - public/js/
#      - public/fonts/
#      - public/mix-manifest.json
#    expire_in: 1 days
#    when: always

db-seeding:
  stage: building
  services:
    - name: mysql:8.0
      command: ["--default-authentication-plugin=mysql_native_password"]
  # Download the artifacts for these jobs
  dependencies:
    - composer
#    - yarn
  script:
    - mysql --version
    - php artisan migrate:fresh --seed
    - mysqldump --host="${DB_HOST}" --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" > db.sql
  artifacts:
    paths:
      - storage/logs # for debugging
      - db.sql
    expire_in: 1 days
    when: always


#
# Stage: Syntax
#

phpcs-fixer:
  stage: syntax
  script:
    - ./vendor/bin/phpcs -n --error-severity=1 --warning-severity=8 app Modules
    - ./vendor/bin/phpcbf app Modules

php-cs-fixer:
  stage: syntax
  script:
    - ./vendor/bin/php-cs-fixer fix --config=.php_cs.dist --verbose --diff --dry-run


#
# Stage: Testing
#

phpunit:
  stage: testing
  dependencies:
    #- build-assets
    - composer
    - db-seeding
  script:
    - php -v
    - php artisan storage:link
    - sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
    - echo "" | sudo tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    - ./vendor/bin/phpunit --version
    - php -d short_open_tag=off ./vendor/bin/phpunit -v --colors=never --stderr --exclude-group integration
    - sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  artifacts:
    paths:
      - ./storage/logs
    expire_in: 1 days
    when: on_failure

phpstan:
  stage: testing
  script:
    #- php artisan code:analyse
    - ./vendor/bin/phpstan analyse app Modules

codestyle:
  stage: testing
  image: lorisleiva/laravel-docker
  script:
    - phpcs --extensions=php app Modules

phpcpd:
  stage: testing
  script:
    - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o vendor/bin/phpcpd.phar
    - php phpcpd.phar app/ --min-lines=50
  cache:
    paths:
      - phpcpd.phar


#
# Stage: Security
#

sensiolabs:
  stage: security
  dependencies:
    - composer
  script:
    - php security-checker security:check composer.lock


#
# Stage: Deploy
#

deploy_production:
  stage: deploy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    - ~/.composer/vendor/bin/envoy run deploy --commit="$CI_COMMIT_SHA"
  environment:
    name: production
    url: $DEPLOY_HEALTH_CHECK
  when: manual
  only:
    - master
